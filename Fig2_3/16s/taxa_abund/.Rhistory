}
############分组柱状图
#先加载包
library(ggplot2); library(ggpubr)
####################################
data=read.csv("E:\\全国采样计划2023\\果实和土壤指标\\data.csv",header = T,
row.names = 1,encoding="UTF-8",check.names = T)
colnames(data)
data$cultivar = as.factor (data$cultivar)
soills=colnames(data)[2:10]
lst <- list() ##用于批量画图的排版
n <- 0 ##  用于批量画图的排版
# i="Cu.mg.kg"
for (i in soills) {
n <- n + 1
p<- ggplot(data, aes_string(x = 'cultivar', y = i,fill='cultivar')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
scale_fill_manual(values=c(VD = "gold2", CS = "darkorchid3", CA = "dodgerblue1"))+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
width = 0.25,position = position_dodge( .9))
p
lst[[n]] <- p ### 把画的
}
p<- ggplot(data, aes_string(x = 'cultivar', y = i,fill='cultivar'),siz ) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
scale_fill_manual(values=c(VD = "gold2", CS = "darkorchid3", CA = "dodgerblue1"))+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
width = 0.25,position = position_dodge( .9))
p2 = p + theme(text = element_text(size = 30))
p2
lst <- list() ##用于批量画图的排版
n <- 0 ##  用于批量画图的排版
# i="Cu.mg.kg"
for (i in soills) {
n <- n + 1
p<- ggplot(data, aes_string(x = 'cultivar', y = i,fill='cultivar'),siz ) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
scale_fill_manual(values=c(VD = "gold2", CS = "darkorchid3", CA = "dodgerblue1"))+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
width = 0.25,position = position_dodge( .9))
p2 = p + theme(text = element_text(size = 20))
p2
lst[[n]] <- p2 ### 把画的
}
pdf("XZ soil_2.pdf",width=10,height=12)
do.call("ggarrange", c(lst, ncol=3, nrow=3))
dev.off()
soills
i="P.mg.kg"
p<- ggplot(data, aes_string(x = 'cultivar', y = i,fill='cultivar'),siz ) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
scale_fill_manual(values=c(VD = "gold2", CS = "darkorchid3", CA = "dodgerblue1"))+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
width = 0.25,position = position_dodge( .9))
p2 = p + theme(text = element_text(size = 20))
p2
#####
Sys.setlocale(,"CHS")
#####
Sys.setlocale(,"CHS")
library(ggplot2); library(ggpubr)
library(ggplot2); library(ggpubr); library(xlsx)
soil=read.xlsx("data.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
soil=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
View(soil)
soil=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
str(soil)
unique(data$送样编号)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
unique(data$送样编号)
data$送样编号 =factor(data$送样编号)
data$葡萄品种=factor (data$葡萄品种)
data$葡萄品种
colnames(data)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
str(data)
View(data)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
View(data)
#####
Sys.setlocale(,"CHS")
library(ggplot2); library(ggpubr); library(xlsx)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
View(data)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
str(data)
View(data)
#####
Sys.setlocale(,"CHS")
library(ggplot2); library(ggpubr); library(xlsx)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
View(data)
View(data1)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
View(data)
#####
Sys.setlocale(,"CHS")
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
View(data)
data1
str(data1)
data=data1[c(-1),]
View(data)
unique(data1$送样编号)
data1$送样编号 =factor(data1$送样编号)
data1$葡萄品种=factor (data1$葡萄品种)
data1$葡萄品种
colnames(data1)
#####
Sys.setlocale(,"CHS")
library(ggplot2); library(ggpubr); library(xlsx)
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
View(data1)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
data=data1[c(-1),]
str(data1)
data$送样编号 =factor(data$送样编号)
data$葡萄品种=factor (data$葡萄品种)
str(data)
colnames(data)
str(data)
data=lapply(data[,6:17],as.numeric)
str(data)
View(data)
#####
Sys.setlocale(,"CHS")
library(ggplot2); library(ggpubr); library(xlsx)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
View(data)
#####
Sys.setlocale(,"CHS")
library(ggplot2); library(ggpubr); library(xlsx)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
View(data)
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
View(data1)
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
View(data1)
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
View(data)
data=data1[c(-1),]
str(data)
data=as.data.frame(lapply(data[,6:17],as.numeric))
View(data)
data$送样编号 =factor(data1$送样编号)
data$葡萄品种=factor (data1$葡萄品种)
soil=data1[c(-1),]
data$送样编号 =factor(soil$送样编号)
data$葡萄品种=factor (soil$葡萄品种)
View(data)
data$葡萄品种
colnames(data)[6:17]
i='交换性钙.'
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
View(data1)
paste0(i, " (",data1[2,i],")")
View(data1)
paste0(i, " (",data1[1,i],")")
geneslst=colnames(data)[6:17]
lst <- list() ##用于批量画图的排版
n <- 0 ##  用于批量画图的排版
# i='交换性钙.'
for (i in geneslst) {
n <- n + 1
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
###
p
lst[[n]] <- p ### 把画的
}
pdf("soil_Region_Region.pdf",width=16,height=12)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
library(ggplot2); library(ggpubr); library(xlsx);library(Cairo)
library(Cairo)
CairoPDF("chinese.pdf",family="Microsoft YaHei",width=16,height=12)
CairoPDF("chinese.pdf",family="Microsoft YaHei",width=16,height=12)
CairoPDF("chinese.pdf",family="Microsoft YaHei")
ggsave(p,filename="score.pdf",device=cairo_pdf,width=9,height=6,units="in")
p
i='交换性钙.'
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
CairoPDF("chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,file="chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,file=p,"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,file="chinese.pdf",family="Microsoft YaHei")
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
soil=data1[c(-1),]
str(data1)
str(data)
data=as.data.frame(lapply(data[,6:17],as.numeric))
data$送样编号 =factor(soil$送样编号)
data$葡萄品种=factor (soil$葡萄品种)
View(data)
View(data1)
data=data1[c(-1),]
str(data1)
str(data)
data=as.data.frame(lapply(data[,6:17],as.numeric))
data$送样编号 =factor(soil$送样编号)
data$葡萄品种=factor (soil$葡萄品种)
View(data)
CairoPDF(16,12,"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,'tex',"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,tex,"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,"chinese.pdf",family="Microsoft YaHei")
CairoPDF(16,12,file="","chinese.pdf",family="Microsoft YaHei")
i='交换性钙.'
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
lst <- list() ##用于批量画图的排版
n <- 0 ##  用于批量画图的排版
for (i in geneslst) {
n <- n + 1
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
###
lst[[n]] <- p ### 把画的
}
geneslst=colnames(data)[6:17]
lst <- list() ##用于批量画图的排版
n <- 0 ##  用于批量画图的排版
for (i in geneslst) {
n <- n + 1
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
###
lst[[n]] <- p ### 把画的
}
pdf("soil_Region_Region11.pdf",width=16,height=12)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
wd="E:\\Data\\Soil traits\\SPAD\\怀来bud 202205"
library(Cairo)#加载Cairo
library(ggplot2)
library(ggpubr)
pacman::p_load(showtext)
font_families()
font_add("myfont","C:/Windows/Fonts/simhei.ttf")
font_families()
dat=read.csv("E:\\Data\\Soil traits\\SPAD\\怀来bud 202205\\Huailai Bud Quality_Vineyard - ME - 3.csv",check.names = F)
pacman::p_load(showtext)
font_families()
font_add("myfont","C:/Windows/Fonts/simhei.ttf")
font_families()
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
colnames(data)[6:17]
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
View(data1)
data=data1[c(-1),]
soil=data1[c(-1),]
str(data1)
View(data)
View(data)
colnames(data)
lst <- list() ##用于批量画图的排版
n <- 0 ##  用于批量画图的排版
geneslst=colnames(data)[6:17]
# i='交换性钙.'
for (i in geneslst) {
n <- n + 1
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
###
lst[[n]] <- p ### 把画的
}
pdf("soil_Region_Region11.pdf",width=16,height=12)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
data1=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=1, endRow=17,encoding="UTF-8")
data=read.xlsx("C:\\Users\\Richard\\Desktop\\data\\data1.xlsx",2, startRow=2, endRow=17,encoding="UTF-8")
str(data1)
str(data)
View(data)
View(data1)
data=data1[c(-1),]
data=as.data.frame(lapply(data[,6:17],as.numeric))
View(data)
soil=data1[c(-1),]
data$送样编号 =factor(soil$送样编号)
data$葡萄品种=factor (soil$葡萄品种)
View(data)
str(data)
colnames(data)[6:17]
colnames(data)
geneslst=colnames(data)[1:12]
lst <- list() ##用于批量画图的排版
n <- 0 ##  用于批量画图的排版
# i='交换性钙.'
for (i in geneslst) {
n <- n + 1
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
###
lst[[n]] <- p ### 把画的
}
pdf("soil_Region_Region1111.pdf",width=16,height=12)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
pdf("soil_Region_Region1111.pdf",width=16,height=20)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
pdf("soil_Region_Region12.pdf",width=16,height=30)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
pdf("soil_Region_Region12.pdf",width=16,height=12)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
colnames(data)[1:12]
# i='交换性钙.'
i='有机质.'
p<- ggplot(data, aes_string(x = '送样编号', y = i,fill='葡萄品种')) +
geom_bar(stat = "summary", fun = mean, color = "black", position = position_dodge()) +
# geom_bar(stat = "identity", position = position_dodge2(preserve = "single"))+
# scale_fill_manual(values=c(CHs= "lightgoldenrod2",CH = "gold2", CS = "darkorchid3", ME = "dodgerblue1"))+
# stat_summary(fun.data = 'mean_sd', geom = "errorbar", colour = "black",
#              width = 0.25,position = position_dodge( .9))+
labs(y=paste0(i, " (",data1[1,i],")"))+
theme(axis.text.x = element_text(angle = 45,vjust = 0.85,hjust = 0.75))
p
pdf("soil_Region_Region13.pdf",width=16,height=12)
do.call("ggarrange", c(lst, ncol=2, nrow=3))
dev.off()
library(SpiecEasi)
library(phyloseq)
install_github("hallucigenia-sparsa/seqtime")
library(devtools)
install_github("hallucigenia-sparsa/seqtime")
library(seqtime)
wd="E:\\Data\\BerryMicromeGene2021\\microeco\\taxa_abund\\"
setwd(wd)
load("E:/Data/BerryMicromeGene2021/VPA/.RData")
Family=read.csv("Genus_abund.csv", row.names = 1, header = T,check.names = F)
head(Family)
View(Family)
Family=read.csv("Family_abund.csv", row.names = 1, header = T,check.names = F)
head(Family)
gene_filter2 <- data.frame(Family[which(apply(Family, 1, function(x){mean(x)})
>0.01),], check.names=F)
gene_filter2
View(gene_filter2)
gene_filter2 <- data.frame(Family[which(apply(Family, 2, function(x){mean(x)})
>0.01),], check.names=F)
gene_filter <- data.frame(Family[which(apply(Family, 1, function(x){mean(x)})
>0.01),], check.names=F)
Genus=read.csv("Genus_abund.csv", row.names = 1, header = T,check.names = F)
head(Genus)
gene_filter1 <- data.frame(Genus[which(apply(Genus, 1, function(x){mean(x)})
>0.01),], check.names=F)
View(gene_filter1)
gene_filter1
gene_filter1
tax_lst=read.csv("tax_table1.csv", row.names = 1, header = T,check.names = F)
View(tax_lst)
otu_filter=tax_lst[which(tax_lst$Taxa_g==rownames(gene_filter1)),]
View(gene_filter1)
# 示例数据框 df1
df1 <- data.frame(value = 1:3, row.names = c("apple", "banana", "cherry"))
View(df1)
# 示例数据框 df2
df2 <- data.frame(label = c("fruit_apple", "fruit_banana", "vegetable_carrot", "fruit_cherry"),
count = c(10, 20, 30, 40))
# 构造匹配模式，这里假设df1的行名在df2的label中总是以"fruit_"开头
patterns <- paste0("^fruit_", rownames(df1), "$")
# 应用grepl查找匹配的行
matches <- grepl(patterns, df2$label)
# 使用逻辑索引从df2中提取匹配的行
result_df <- df2[matches, ]
# 查看结果
print(result_df)
matches <- grepl(row.names(gene_filter1),tax_lst$Taxa_g )
otu_filter=tax_lst[which(tax_lst$Taxa_g==rownames(gene_filter1)),]
View(otu_filter)
View(otu_filter)
matches <- grepl(row.names(gene_filter1),tax_lst$Taxa_g )
matches
otu_tab=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\basic_files\\feature_table.csv",
row.names = 1, header = T,check.names = F)
otu_tab=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\basic_files\\feature_table.csv"
, row.names = 1, header = T,check.names = F)
otu_tab=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\basic_files\\feature_table.csv",
row.names = 1, header = T,check.names = F)
otu_tab=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\basic_files\\feature_table.csv",
row.names = 1, header = T,check.names = F)
otu_tab=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\\basic_files\\feature_table.csv",
row.names = 1, header = T,check.names = F)
tax_lst
View(tax_lst)
result_otu <- tax_lst[matches, ]
result_otu
View(result_otu)
View(tax_lst)
View(gene_filter1)
tax_lst=read.csv("tax_table1.csv", row.names = 8, header = T,check.names = F)
lst=c()
for (i in rownames(gene_filter1)) {
extract_otu=rownames(tax_lst[which(tax_lst$Taxa_g==i),])
lst=append(extract_otu,lst)
}
lst
unique(lst)
extract_otu
lst=c()
for (i in rownames(gene_filter1)) {
extract_otu=rownames(tax_lst[which(tax_lst$Taxa_g==i),])
lst=append(lst,extract_otu)
}
unique(lst)
unique(lst)
otu_tab=read.csv("feature_table.csv", row.names = 1, header = T,check.names = F)
otu_tab_filter=otu_tab[lst,]
otu=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\\basic_files\\feature_table.csv",
row.names = 1,header = T,check.names = F)
View(otu)
tax=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\\basic_files\\tax_table_for_cor.csv",
row.names = 1, header = T,check.names = F)
View(tax)
otu_tax=read.csv("E:\\Data\\BerryMicromeGene2021\\microeco\\basic_files\\tax_table.csv",
row.names = 1, header = T,check.names = F)
View(otu_tax)
otu_tax_filter=otu_tax[lst,]
write.csv(otu_tab_filter,'otu_tab_filter.csv')
write.csv(otu_tax_filter,'otu_tax_filter.csv')
